name: Build

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: packetcoders/action-setup-cache-python-poetry@v1.2.0

        with:
          python-version: "3.10"
          poetry-version: "1.7.1"

      - name: Build App
        run: >
          poetry run pyinstaller
          --onefile
          --windowed
          --argv-emulation
          --name ldz
          --icon src/assets/icon.ico
          --add-data src/assets/stag.png;assets
          --hidden-import babel.numbers
          --noconfirm
          src/__init__.py

      - name: Test App
        run: |
          ./dist/ldz.exe &
          sleep 10
          if [ -f ./dist/CRASH.dump ]; then
            cat ./dist/CRASH.dump
            exit 1
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-windows
          path: dist/ldz.exe

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: packetcoders/action-setup-cache-python-poetry@v1.2.0
        with:
          python-version: "3.10"
          poetry-version: "1.7.1"

      - name: Build App
        run: >
          poetry run pyinstaller
          --onefile
          --windowed
          --argv-emulation
          --name ldz
          --icon src/assets/icon.icns
          --add-data src/assets/stag.png:assets
          --hidden-import babel.numbers
          --noconfirm
          src/__init__.py

      - name: Test App
        run: |
          open -a "$PWD/dist/ldz.app" &
          sleep 10
          if [ -f ./dist/CRASH.dump ]; then
            cat ./dist/CRASH.dump
            exit 1
          fi

      - name: Zip App
        run: |
          cd dist
          zip -r ldz.zip ldz.app

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-macos
          path: dist/ldz.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]

    env:
      VERSION: ""

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: packetcoders/action-setup-cache-python-poetry@v1.2.0
        with:
          python-version: "3.10"
          poetry-version: "1.7.1"

      - name: Extract Version
        run: echo VERSION="$(poetry version -s)" >> "$GITHUB_ENV"

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows
          path: dist/windows

      - uses: actions/download-artifact@v4
        with:
          name: build-macos
          path: dist/macos

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: v${{ env.VERSION }}
          generateReleaseNotes: true
          artifacts: |
            dist/windows/*
            dist/macos/*
